# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Archivos temporales y de sistema
*.log
*.tmp
*.swp
*.bak
.DS_Store
Thumbs.db

# Archivos de IDEs
.vscode/
.idea/
*.sublime-workspace
*.sublime-project

# Archivos Python si usas scripts para plantillas
__pycache__/
*.py[cod]
*.egg-info/
.env

# Archivos de AWS CLI (credenciales NO deben estar en el repo)
*.pem
*.key
.aws/
.aws-sam/

# Archivos de empaquetado
build/
dist/
*.zip
*.tar.gz

# CloudFormation stack files (si se generan din√°micamente)
*.template.json
*.template.yaml
*.stack.json
*.stack.yaml


# Node.js (si usas SAM + JS/TS)
node_modules/
package-lock.json

# SAM / CDK adicionales (si usas estos)
cdk.out/

